[2024-11-05 09:58:35 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 09:58:35 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:01:02 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:01:02 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:01:04 周二] [Debug   ] [RadarName: ""] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::OpenRadarPort()] Row[500]
[2024-11-05 10:01:04 周二] [Debug   ] [""  打开失败! ] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[virtual bool SPComm::open()] Row[50]
[2024-11-05 10:01:04 周二] [Debug   ] [""  is open failed!] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::OpenRadarPort()] Row[505]
[2024-11-05 10:01:04 周二] [Warning ] [QIODevice::write (QSerialPort): device not open] File[io\qiodevice.cpp] Fun[void checkWarnMessage(const QIODevice*, const char*, const char*)] Row[93]
[2024-11-05 10:01:04 周二] [Debug   ] [StartAngle:  -45.11] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::on_pushButtonDetect_clicked()] Row[1623]
[2024-11-05 10:01:04 周二] [Debug   ] [EndAngle: 45.11] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::on_pushButtonDetect_clicked()] Row[1629]
[2024-11-05 10:01:04 周二] [Debug   ] [AngleOfX: 90] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::on_pushButtonDetect_clicked()] Row[1632]
[2024-11-05 10:01:04 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:01:04 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:01:04 周二] [Debug   ] [writeData: ? , size: 12] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[160]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFE"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "00000000"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "0000001A"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "00000000"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFF"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFF"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFE"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "0000003D"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFF96"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFE7"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFEF"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFE"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:01:04 周二] [Warning ] [QIODevice::write (QSerialPort): device not open] File[io\qiodevice.cpp] Fun[void checkWarnMessage(const QIODevice*, const char*, const char*)] Row[93]
[2024-11-05 10:01:51 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:01:51 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:02:15 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:02:15 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:02:18 周二] [Debug   ] [RadarName: "COM3"] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::OpenRadarPort()] Row[500]
[2024-11-05 10:02:18 周二] [Debug   ] [""  打开失败! ] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[virtual bool SPComm::open()] Row[50]
[2024-11-05 10:02:18 周二] [Debug   ] [RadarBaudRate: 115200] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::OpenRadarPort()] Row[511]
[2024-11-05 10:02:18 周二] [Debug   ] [StartAngle:  -45.11] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::on_pushButtonDetect_clicked()] Row[1623]
[2024-11-05 10:02:18 周二] [Debug   ] [EndAngle: 45.11] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::on_pushButtonDetect_clicked()] Row[1629]
[2024-11-05 10:02:18 周二] [Debug   ] [AngleOfX: 90] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::on_pushButtonDetect_clicked()] Row[1632]
[2024-11-05 10:02:18 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:02:18 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:02:18 周二] [Debug   ] [writeData: ? , size: 12] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[160]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFE"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "00000000"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "0000001A"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "00000000"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFF"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFF"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFE"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "0000003D"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFF96"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFE7"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFEF"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Debug   ] [Hex: "FFFFFFFFFFFFFFFE"] File[..\Darkroom_mz_ok_0628\Spcomm.cpp] Fun[int SPComm::writeData(const char*, int)] Row[164]
[2024-11-05 10:02:18 周二] [Warning ] [QIODevice::write (QSerialPort): device not open] File[io\qiodevice.cpp] Fun[void checkWarnMessage(const QIODevice*, const char*, const char*)] Row[93]
[2024-11-05 10:02:18 周二] [Debug   ] [m_channel_num: 4] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::ParseData(QString&)] Row[463]
[2024-11-05 10:02:18 周二] [Debug   ] [m_channel_num: 5] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::ParseData(QString&)] Row[463]
[2024-11-05 10:02:18 周二] [Debug   ] [m_channel_num: 6] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::ParseData(QString&)] Row[463]
[2024-11-05 10:02:18 周二] [Debug   ] [m_channel_num: 7] File[..\Darkroom_mz_ok_0628\mainwindow.cpp] Fun[void MainWindow::ParseData(QString&)] Row[463]
[2024-11-05 10:04:32 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:04:32 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:07:58 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:07:58 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
[2024-11-05 10:11:03 周二] [Debug   ] [RotaryControlThread::typechangedslot: "俯仰轴"] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[134]
[2024-11-05 10:11:03 周二] [Debug   ] [RotaryControlThread::typechangedslot m_type: 1] File[..\Darkroom_mz_ok_0628\RotaryControlThread.cpp] Fun[void RotaryControlThread::typechangedslot(const QString&)] Row[148]
