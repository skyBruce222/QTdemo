#ifndef SETRADARWINDOW_H
#define SETRADARWINDOW_H

#include <QMainWindow>
#include <QLabel>
#include <QDateTime>
#include <QTime>
#include <QTimer>
#include <QtSerialPort/QSerialPort>
#include <QtSerialPort/QSerialPortInfo>
#include <QFile>

namespace Ui {
class setRadarWindow;
}

class setRadarWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit setRadarWindow(QWidget *parent = nullptr);
    ~setRadarWindow();

private slots:

    void updateTime();

    void on_pushButton_4_clicked();

    void on_pushButton_2_clicked();

    void SerialReadDataSlot();

    void handleSerialError(QSerialPort::SerialPortError error);

    void on_pushButton_3_clicked();

    void on_pushButton_clicked();

    void sendRodDirectionSlot();

    void sendRodDirectionSetSlot();

    void on_pushButton_5_clicked();

    void on_pushButton_6_clicked();

    void on_pushButton_9_clicked();

    void displayAllPointsSlot();

    void on_pushButton_10_clicked();

    void stateChangeSlot(bool);

    void on_pushButton_8_clicked();

    void on_pushButton_7_clicked();

    void upgradeFwSlot();

public slots:
    void serialNameSlot(QString, int);

private:
    Ui::setRadarWindow *ui;
    QDateTime currentTime;
    QSerialPort *serialPort;//定义串口指针
    QString gPortName;
    int gBaudRate;
    bool sendReadParasCmdFlag = false;

    bool sendSetParasCmdFlag = false;

    bool displayAllTargetCmdFlag = false;

    bool hexSendFlag = false;

    bool displayInfo = false;

    bool upgradeFw = false;

    uint8_t rodType;

    bool states = false;
    bool disVel = false;

    uint8_t pIdx = 0;
    uint16_t pIndex[64] = {0};
    float p_x[64] = {0};
    float p_y[64] = {0};
    float p_v[64] = {0};
    float p_p[64] = {0};
    uint8_t p_area[64] = {0};
    uint8_t p_thr[64] = {0};
    uint8_t p_t[64] = {0};
    uint8_t ledLightCnt = 0, ledDownCnt = 0;

    QString binfilename ;
    uint32_t sizefirmware=0;
    uint32_t framecount = 0;
    QByteArray firmbindata; //存储bin文件数据
    uint16_t sendeachbinsize1=64;  //每包数据大小；
    QFile file;

    typedef enum upgrade_e_{
        SET_BOOT_MODE = 0,
        SR,
        TEST,
        ERASE,
        SEND_FILE_SIZE,
        SEND_FILE,
        CHECKSUM,
        UPGRADE,
        SR_2,
        END,
    }upgrade_e;
    upgrade_e upgrade_step = SET_BOOT_MODE;

#if  1//APP
/* Demo Include Files */
uint8_t crc8_table[256] = {
0x93,0x98,0xE4,0x46,0xEB,0xBA,0x04,0x4C,
0xFA,0x40,0xB8,0x96,0x0E,0xB2,0xB7,0xC0,
0x0C,0x32,0x9B,0x80,0xFF,0x30,0x7F,0x9D,
0xB3,0x81,0x58,0xE7,0xF1,0x19,0x7E,0xB6,
0xCD,0xF7,0xB4,0xCB,0xBC,0x5C,0xD6,0x09,
0x20,0x0A,0xE0,0x37,0x51,0x67,0x24,0x95,
0xE1,0x62,0xF8,0x5E,0x38,0x15,0x54,0x77,
0x63,0x57,0x6D,0xE9,0x89,0x76,0xBE,0x41,
0x5D,0xF9,0xB1,0x4D,0x6C,0x53,0x9C,0xA2,
0x23,0xC4,0x8E,0xC8,0x05,0x42,0x61,0x71,
0xC5,0x00,0x18,0x6F,0x5F,0xFB,0x7B,0x11,
0x65,0x2D,0x8C,0xED,0x14,0xAB,0x88,0xD5,
0xD9,0xC2,0x36,0x34,0x7C,0x5B,0x3C,0xF6,
0x48,0x0B,0xEE,0x02,0x83,0x79,0x17,0xE6,
0xA8,0x78,0xF5,0xD3,0x4E,0x50,0x52,0x91,
0xD8,0xC6,0x22,0xEC,0x3B,0xE5,0x3F,0x86,
0x06,0xCF,0x2B,0x2F,0x3D,0x59,0x1C,0x87,
0xEF,0x4F,0x10,0xD2,0x7D,0xDA,0x72,0xA0,
0x9F,0xDE,0x6B,0x75,0x56,0xBD,0xC7,0xC1,
0x70,0x1D,0x25,0x92,0xA5,0x31,0xE2,0xD7,
0xD0,0x9A,0xAF,0xA9,0xC9,0x97,0x08,0x33,
0x5A,0x99,0xC3,0x16,0x84,0x82,0x8A,0xF3,
0x4A,0xCE,0xDB,0x29,0x0F,0xAE,0x6E,0xE3,
0x8B,0x07,0x3A,0x74,0x47,0xB0,0xBB,0xB5,
0x7A,0xA9,0x2C,0xD4,0x03,0x3E,0x1A,0xA7,
0x27,0x64,0x06,0xBF,0x56,0x73,0x1E,0xFE,
0x49,0x01,0x39,0x28,0xF4,0x26,0xDF,0xDD,
0x44,0x0D,0x21,0xF2,0x85,0xB9,0xEA,0x4B,
0xDC,0x6A,0xCA,0xAC,0x12,0xFC,0x2E,0x2A,
0xA3,0xF0,0x66,0xE8,0x60,0x45,0xA1,0x8D,
0x68,0x35,0xFD,0x8F,0x9E,0x1F,0x13,0xD1,
0xAD,0x69,0xCC,0xA4,0x94,0x90,0x1B,0x43,
};
#endif
    uint16_t sendCmdCnt = 0;

    uint32_t checkSum = 0;

    uint16_t timeOutCnt = 0;

    void initSetRadarWindow();

    void setLED(QLabel* label, int color, int size);

    void sendDataBySerialPort(QString data, bool hexSend);

    QString chardata(const QString &hexString,const int &i);

    void Delay_MSec_Suspend(unsigned int msec);

    void upgradeProcess(QByteArray data);

    void setParasProcess(QByteArray);

    uint8_t crc8(uint8_t* pbuf, int32_t len);

    uint16_t frame_format_analysis(QByteArray data, uint16_t *dataLen);

    void setUIcontrol(bool states);

 signals:
    void sendRodDirectionSig();
    void sendRodDirectionSetSig();
    void displayAllPointsSig();
    void upgradeFwSig();
    void stateChangeSig(bool);
    void reConnectSerialSig();
};

#endif // SETRADARWINDOW_H
